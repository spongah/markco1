<%= render "devise/shared/navbar" %>

<div class="main">

	<div class="yourlocation" id="yourlocation">

		<div id="map">
			<div class="loading"><%= image_tag "loading.gif" %></div> 
		</div>
		<div class="submap">
			<div id="status" class="status">
				<% if notice %>
					<p class="notice success alert-box"><%= notice %></p>
				<% end %>
				<% if alert %>
					<p class="alert error alert-box"><%= alert %></p>
				<% end %>
			</div>
			<div class="userid" id="roomid"></div>
		</div>

		<div id="maplink">

		</div>

		<script>
			editPage = false;
			setTimeout(fade_out, 5000);

			 function fade_out() {
			  $(".notice").fadeOut(2000, function() { 
					$(".notice").remove();
			  });
			  $(".alert").fadeOut(2000, function() { 
			 		$(".alert").remove();
			  });
			}
			var dropdown = document.getElementById("maindropdown");
			document.getElementById("dropdownbutton").onclick = function() {
				if (dropdown.style.display != "block") {
					dropdown.style.display = "block"; 
				} else {
					dropdown.style.display = "none";
				}
			}

			var dropdowninvite = document.getElementById("dropdowninvite");
			dropdowninvite.onclick = function(){ 
				populateUserList({ invite: true, remove: false });
				document.getElementById("maindropdown").style.display = "none";
			}

			var dropdownremove = document.getElementById("dropdownremove");
			dropdownremove.onclick = function(){
				populateUserList(options = {invite: false, remove: true});
				document.getElementById("maindropdown").style.display = "none";
			}

			gon.watch("user", function(result){
		    if (result.room == result.id) {
		      document.getElementById("dropdownleave").style.display = "none";
		      document.getElementById("dropdowninvite").style.display = "block";
		      document.getElementById("dropdownremove").style.display = "block";
		    } else {
		      document.getElementById("dropdownleave").style.display = "block";
		      document.getElementById("dropdowninvite").style.display = "none";
		      document.getElementById("dropdownremove").style.display = "none";
		    }
		  });

	    document.getElementById("dropdowninvite").onclick = function(){
	      document.getElementById("maindropdown").style.display = "none";
	      populateUserList({ invite: true, remove: false });
	    };

	    document.getElementById("dropdownleave").onclick = function() {
	      document.getElementById("maindropdown").style.display = "none";
	      goHome();
	    };

	    document.getElementById("dropdownremove").onclick = function() {
	      document.getElementById("maindropdown").style.display = "none";
	      populateUserList(options = {invite: false, remove: true});
	    };

	    document.getElementById("avatar").onclick = function() {
      	location.href="users/edit"
      }

	    var editPage = false;
	    if (mapLoaded) { 
			    tempImage = "";
			    if (gon.user.icon) { tempImage = gon.user.icon.url } else { tempImage = "/noavatar.png" }
			    var options = {
			                    enableHighAccuracy: true,
			                    timeout: Infinity,
			                    maximumAge: 10000
			                  }

			    myIcon = {
			      url: tempImage,
			      scaledSize: new google.maps.Size(50, 50)
			    }
			  	
			    createMap();	 												    // CREATES MAP AFTER getMyLocation SETS myPosition

			    updatePosition();                        // SEND NEW POSITION TO DATABASE

			 		myMarker = placeMarker(myPosition, "", gon.user.displayname, "", myIcon); // SET MY MARKER
			 	  if (gon.markerArray) { 
			      loadMarkers(gon.markerArray);    
			    }						// LOAD OTHER MARKERS (NOT MINE)

			    gon.watch("roomName", function(result) {
			      document.getElementById("roomid").innerHTML = result;
			    });

			    modal = document.getElementById('myModal');
			    userInviting = document.getElementById('userInviting');
			    // closeModal = document.getElementsByClassName("close")[0];
			    acceptInvite = document.getElementById('acceptInvite');
			    declineInvite = document.getElementById('declineInvite');

			    modal2 = document.getElementById('myModal2');
			    close = document.getElementById('close');


			    map.fitBounds(bounds);                 // ZOOM MAP AUTOMATICALLY BASED ON THE BOUNDS
			    map.setCenter(myPosition);              // CENTER MAP ON myPosition

			    mainLoop();


			    myWatcher = navigator.geolocation.watchPosition(function(position) {		// SET WATCHER FOR LOCATION CHANGE
					  updates += 1;
					  myPosition.lat = position.coords.latitude;		// SET myPosition
					  myPosition.lng = position.coords.longitude;		// SET myPosition
					  myMarker.setPosition(myPosition);							// SET myMarker POSITION BASED ON UPDATED myPosition
			      updatePosition();                             // SEND NEW POSITION TO DATABASE
					}, function(err){ console.log(err) }, options);	// LOGS ERRORS TO CONSOLE, INSERTS OPTIONS HASH
	    } else { initMap(); }


		</script>


		
	</div>

</div>
